name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          npm install
      - run: |
          npm run all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        id: test
        with:
          file-path: '.github/test-file.yaml'
      - run: |
          echo "${{ toJson(steps.test.outputs) }}"
          echo "outputs variables:"
          echo "${{ steps.test.outputs.var_1__var_1__var_1 }}"
          echo "${{ steps.test.outputs.var_1__var_1__var_2 }}"
          echo "${{ steps.test.outputs.var_1__var_1__var_3 }}"
          echo "${{ steps.test.outputs.var_1__var_1__var_4__var_1__var_2 }}"
          echo "${{ steps.test.outputs.var_1__var_2 }}"
          echo "${{ steps.test.outputs.var_2 }}"
          echo "environment variables:"
          echo "${{ env.var_1__var_1__var_1 }}"
          echo "${{ env.var_1__var_1__var_2 }}"
          echo "${{ env.var_1__var_1__var_3 }}"
          echo "${{ env.var_1__var_1__var_4__var_1__var_2 }}"
          echo "${{ env.var_1__var_2 }}"
          echo "${{ env.var_2 }}"
      - uses: ./
        id: test-nodes
        with:
          file-path: '.github/test-file.yaml'
          node: 'var_1.var_1'
      - run: |
          echo "${{ toJson(steps.test-nodes.outputs) }}"
          echo "outputs variables:"
          echo "${{ steps.test-nodes.outputs.var_1 }}"
          echo "${{ steps.test-nodes.outputs.var_2 }}"
          echo "${{ steps.test-nodes.outputs.var_3 }}"
          echo "${{ steps.test-nodes.outputs.var_4__var_1__var_2 }}"
      - uses: ./
        name: Test File Not Found, expect no failure
        id: test-file-not-found  # By default the action fails if the file is not found, test that it does not fail when instructed
        with:
          file-path: '.github/not-found-test-file.yaml'
          fail-on-file-not-found: false
      - uses: ./
        name: Test File Not Found, expect failure
        id: test-file-not-found-fail
        with:
          file-path: '.github/not-found-test-file.yaml'
        continue-on-error: true
